# 1Ô∏è‚É£ –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é find_max(lst), —è–∫–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–∞–π–±—ñ–ª—å—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —É —Å–ø–∏—Å–∫—É.
# 2Ô∏è‚É£ –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é filter_even(lst), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Ç—ñ–ª—å–∫–∏ –∑ –ø–∞—Ä–Ω–∏–º–∏ —á–∏—Å–ª–∞–º–∏.
# üìå –ü—Ä–∏–∫–ª–∞–¥:
# print(find_max([3, 7, 2, 8, 10, 4]))  # 10
# print(filter_even([1, 2, 3, 4, 5, 6]))  # [2, 4, 6]

def find_max(lst):
    for i in lst:
      return max(lst)

print(find_max([3, 7, 2, 8, 10, 4]))


# def filter_even(lst):
#     for i in lst:
#         if i % 2 == 0:
#           return i
        
        
# print(filter_even([1, 2, 3, 4, 5, 6]))

# –¢–≤–æ—è —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞—Ä–∞–∑ –ø—Ä–∞—Ü—é—î –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, —Ç–æ–º—É —â–æ return i –∑–∞–≤–µ—Ä—à—É—î –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –ø—ñ—Å–ª—è –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –ø–∞—Ä–Ω–æ–≥–æ —á–∏—Å–ª–∞. –ù–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª.

# –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç:

def filter_even(lst):
    return [i for i in lst if i % 2 == 0]

print(filter_even([1, 2, 3, 4, 5, 6]))  # [2, 4, 6]
# üìå –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?

# [i for i in lst if i % 2 == 0] ‚Äì —Ü–µ —Å–ø–∏—Å–∫–æ–≤–µ –≤–∫–ª—é—á–µ–Ω–Ω—è (list comprehension), —è–∫–µ —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π —Å–ø–∏—Å–æ–∫, –¥–æ–¥–∞—é—á–∏ —Ç—ñ–ª—å–∫–∏ –ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞.