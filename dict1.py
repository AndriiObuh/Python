# 1Ô∏è‚É£ –§—É–Ω–∫—Ü—ñ—è name_lengths(lst), —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Å–ø–∏—Å–æ–∫ —ñ–º–µ–Ω —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Å–ª–æ–≤–Ω–∏–∫, –¥–µ –∫–ª—é—á ‚Äì —ñ–º'—è, –∞ –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äì –π–æ–≥–æ –¥–æ–≤–∂–∏–Ω–∞.
# print(name_lengths(["Alice", "Bob", "Charlie"]))  
# # {'Alice': 5, 'Bob': 3, 'Charlie': 7}

def name_lengths(lst):
    return {name: len(name) for name in lst}

print(name_lengths(["Alice", "Bob", "Charlie"]))  
# {'Alice': 5, 'Bob': 3, 'Charlie': 7}
# üîç –ü–æ—è—Å–Ω–µ–Ω–Ω—è –∫–æ–¥—É:
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–ª–æ–≤–Ω–∏–∫–æ–≤–µ –≤–∫–ª—é—á–µ–Ω–Ω—è (dict comprehension), —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–ª–æ–≤–Ω–∏–∫.
# name: len(name) ‚Äì –∫–ª—é—á–µ–º –±—É–¥–µ —ñ–º'—è, –∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º ‚Äì –π–æ–≥–æ –¥–æ–≤–∂–∏–Ω–∞.
# –§—É–Ω–∫—Ü—ñ—è –ø—Ä–∞—Ü—é—î –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Å–ø–∏—Å–∫—É —ñ–º–µ–Ω.