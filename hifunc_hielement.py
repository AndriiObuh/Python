# üîπ 8. –ü–æ—à—É–∫ –Ω–∞–π–±—ñ–ª—å—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ —É —Å–ø–∏—Å–∫—É
# –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–∞–π–±—ñ–ª—å—à–µ —á–∏—Å–ª–æ —É —Å–ø–∏—Å–∫—É.
# üìå –ü—Ä–∏–∫–ª–∞–¥:
# print(find_max([3, 7, 2, 8, 10, 4]))  # 10

# üîπ –°–ø–æ—Å—ñ–± 1: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è max()
# Python –º–∞—î –≤–±—É–¥–æ–≤–∞–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é max(), —è–∫–∞ —à–≤–∏–¥–∫–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–∞–π–±—ñ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è.

def find_max(lst):
    return max(lst) if lst else None  # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ None, —è–∫—â–æ —Å–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π

# üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
print(find_max([3, 7, 2, 8, 10, 4]))  # 10
print(find_max([-5, -2, -9, -1]))     # -1
print(find_max([]))                   # None (–ø–æ—Ä–æ–∂–Ω—ñ–π —Å–ø–∏—Å–æ–∫)
# ‚úÖ –ü–µ—Ä–µ–≤–∞–≥–∏: –®–≤–∏–¥–∫–æ, –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ, —á–∏—Ç–∞—î—Ç—å—Å—è –ª–µ–≥–∫–æ.

# üîπ –°–ø–æ—Å—ñ–± 2: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü–∏–∫–ª—É (for)
# –†–µ–∞–ª—ñ–∑—É—î–º–æ –ø–æ—à—É–∫ –Ω–∞–π–±—ñ–ª—å—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤—Ä—É—á–Ω—É.

def find_max(lst):
    if not lst:  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Å–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π
        return None
    max_num = lst[0]  # –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –Ω–∞–π–±—ñ–ª—å—à–∏–π
    for num in lst:
        if num > max_num:
            max_num = num
    return max_num

# üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
print(find_max([3, 7, 2, 8, 10, 4]))  # 10
print(find_max([-5, -2, -9, -1]))     # -1
print(find_max([]))                   # None
# ‚úÖ –Ø–∫ –ø—Ä–∞—Ü—é—î?
# –°–ø–æ—á–∞—Ç–∫—É –≤–≤–∞–∂–∞—î–º–æ, —â–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç ‚Äî –Ω–∞–π–±—ñ–ª—å—à–∏–π.
# –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ —á–∏—Å–ª–∞ —É —Å–ø–∏—Å–∫—É, —è–∫—â–æ –∑–Ω–∞—Ö–æ–¥–∏–º–æ –±—ñ–ª—å—à–µ ‚Äî –æ–Ω–æ–≤–ª—é—î–º–æ max_num.




    