# üîπ 6. –ß–∏—Å–ª–∞ –§—ñ–±–æ–Ω–∞—á—á—ñ (—Ä–µ–∫—É—Ä—Å—ñ—è)
# –ù–∞–ø–∏—à–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î n-—Ç–µ —á–∏—Å–ª–æ –§—ñ–±–æ–Ω–∞—á—á—ñ.
# üìå –ü—Ä–∏–∫–ª–∞–¥:
# print(fibonacci(6))  # 8
# print(fibonacci(10)) # 55

# –ß–∏—Å–ª–∞ –§—ñ–±–æ–Ω–∞—á—á—ñ ‚Äî —Ü–µ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å —á–∏—Å–µ–ª, –¥–µ –∫–æ–∂–Ω–µ —á–∏—Å–ª–æ —î —Å—É–º–æ—é –¥–≤–æ—Ö –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö. –ü–µ—Ä—à—ñ –¥–≤–∞ —á–∏—Å–ª–∞ ‚Äî 0 —ñ 1, –∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—é—Ç—å—Å—è –∑–∞ —Ñ–æ—Ä–º—É–ª–æ—é:
# F(0) = 0
# F(1) = 1
# F(n) = F(n-1) + F(n-2) –¥–ª—è –≤—Å—ñ—Ö n > 1
# üîπ –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —á–∏—Å–µ–ª –§—ñ–±–æ–Ω–∞—á—á—ñ

def fibonacci(n):
    if n <= 1:  # –ë–∞–∑–æ–≤—ñ –≤–∏–ø–∞–¥–∫–∏: 0 –∞–±–æ 1
        return n
    return fibonacci(n - 1) + fibonacci(n - 2)  # –†–µ–∫—É—Ä—Å–∏–≤–Ω–µ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
print(fibonacci(6))  # 8
print(fibonacci(10)) # 55
# üèÜ –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?
# –Ø–∫—â–æ n –¥–æ—Ä—ñ–≤–Ω—é—î 0 –∞–±–æ 1, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î —Å–∞–º–µ —á–∏—Å–ª–æ (–±–∞–∑–æ–≤–∏–π –≤–∏–ø–∞–¥–æ–∫).
# –î–ª—è —ñ–Ω—à–∏—Ö –∑–Ω–∞—á–µ–Ω—å n, —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î —Å–µ–±–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–ª—è n-1 —ñ n-2, –∞ –ø–æ—Ç—ñ–º –¥–æ–¥–∞—î —Ü—ñ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–Ω—è.
# ‚ö° –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
# –¶–µ–π –ø—ñ–¥—Ö—ñ–¥ –º–∞—î –≤–∏—Å–æ–∫—É —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å (O(2^n)), —Ç–æ–º—É –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –∑–Ω–∞—á–µ–Ω—å n –≤—ñ–Ω –º–æ–∂–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥—É–∂–µ –ø–æ–≤—ñ–ª—å–Ω–æ. –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–±—á–∏—Å–ª—é–≤–∞—Ç–∏ –±–∞–≥–∞—Ç–æ —á–∏—Å–µ–ª –§—ñ–±–æ–Ω–∞—á—á—ñ, 
# –∫—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –¥–∏–Ω–∞–º—ñ—á–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –∞–±–æ –º–µ–º–æ—ñ–∑–∞—Ü—ñ—é.
# üîπ –•–æ—á–µ—à —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –æ–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ —Ü—é —Ñ—É–Ω–∫—Ü—ñ—é –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ–º–æ—ñ–∑–∞—Ü—ñ—ó —á–∏ —ñ–Ω—à–æ–≥–æ –º–µ—Ç–æ–¥—É? üòä


# üöÄ –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —Ä–µ–∫—É—Ä—Å—ñ—ó: –º–µ–º–æ—ñ–∑–∞—Ü—ñ—è (–∫–µ—à—É–≤–∞–Ω–Ω—è)
# –£ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–º—É –ø—ñ–¥—Ö–æ–¥—ñ –æ–¥–Ω—ñ –π —Ç—ñ —Å–∞–º—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –æ–±—á–∏—Å–ª—é—é—Ç—å—Å—è –±–∞–≥–∞—Ç–æ —Ä–∞–∑—ñ–≤, —â–æ —Ä–æ–±–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–≤—ñ–ª—å–Ω–∏–º.
# –©–æ–± —Ü–µ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏, –º–æ–∂–Ω–∞ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –≤–∂–µ –æ–±—á–∏—Å–ª–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —É —Å–ª–æ–≤–Ω–∏–∫—É (–∫–µ—à—ñ) —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —ó—Ö –ø–æ–≤—Ç–æ—Ä–Ω–æ.

# üîπ –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –§—ñ–±–æ–Ω–∞—á—á—ñ –∑ –º–µ–º–æ—ñ–∑–∞—Ü—ñ—î—é (–∫–µ—à—É–≤–∞–Ω–Ω—è–º)

def fibonacci_memo(n, cache={}):  
    if n in cache:  # –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–∂–µ —î —É –∫–µ—à—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ
        return cache[n]
    if n <= 1:  # –ë–∞–∑–æ–≤–∏–π –≤–∏–ø–∞–¥–æ–∫
        return n
    cache[n] = fibonacci_memo(n - 1, cache) + fibonacci_memo(n - 2, cache)  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –∫–µ—à
    return cache[n]

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
print(fibonacci_memo(6))   # 8
print(fibonacci_memo(10))  # 55
print(fibonacci_memo(50))  # 12586269025 (—à–≤–∏–¥–∫–æ!)
# üèÜ –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?
# –ö–µ—à (—Å–ª–æ–≤–Ω–∏–∫ cache) –∑–±–µ—Ä—ñ–≥–∞—î –≤–∂–µ –æ–±—á–∏—Å–ª–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è.
# –Ø–∫—â–æ n –≤–∂–µ —î –≤ –∫–µ—à—ñ ‚Üí –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –≥–æ—Ç–æ–≤–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
# –Ü–Ω–∞–∫—à–µ, –≤–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É –∫–µ—à—ñ.
# –ó–∞–≤–¥—è–∫–∏ –∫–µ—à—É–≤–∞–Ω–Ω—é –º–∏ —É–Ω–∏–∫–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å, —â–æ –∑–Ω–∞—á–Ω–æ –ø—Ä–∏—Å–∫–æ—Ä—é—î –ø—Ä–æ–≥—Ä–∞–º—É.
# ‚è≥ –®–≤–∏–¥–∫—ñ—Å—Ç—å
# –ó–≤–∏—á–∞–π–Ω–∞ —Ä–µ–∫—É—Ä—Å—ñ—è: O(2^n) (–µ–∫—Å–ø–æ–Ω–µ–Ω—Ü—ñ–π–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å, –¥—É–∂–µ –ø–æ–≤—ñ–ª—å–Ω–æ!)
# –ú–µ–º–æ—ñ–∑–∞—Ü—ñ—è: O(n) (–ª—ñ–Ω—ñ–π–Ω–∞ —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å, –¥—É–∂–µ —à–≤–∏–¥–∫–æ!)
# üîπ –Ñ —â–µ –æ–¥–∏–Ω —Å–ø–æ—Å—ñ–± ‚Äî –¥–∏–Ω–∞–º—ñ—á–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (—ñ—Ç–µ—Ä–∞—Ç–∏–≤–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥). –•–æ—á–µ—à –π–æ–≥–æ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∏? üòä

# üöÄ –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ –¥–∏–Ω–∞–º—ñ—á–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (—ñ—Ç–µ—Ä–∞—Ç–∏–≤–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥)
# –Ü—Ç–µ—Ä–∞—Ç–∏–≤–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –º–∞—Å–∏–≤ –∞–±–æ –¥–≤—ñ –∑–º—ñ–Ω–Ω—ñ, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–∞–π–≤–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å —Ç–∞ —Ä–µ–∫—É—Ä—Å—ñ—ó. –¶–µ —â–µ —à–≤–∏–¥—à–∏–π —Å–ø–æ—Å—ñ–± –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —á–∏—Å–µ–ª –§—ñ–±–æ–Ω–∞—á—á—ñ.

# üîπ –Ü—Ç–µ—Ä–∞—Ç–∏–≤–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ (–¥–∏–Ω–∞–º—ñ—á–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è)

def fibonacci_iter(n):
    if n <= 1:
        return n
    a, b = 0, 1  # –ü–æ—á–∞—Ç–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è F(0) —ñ F(1)
    for _ in range(2, n + 1):
        a, b = b, a + b  # –û–±—á–∏—Å–ª–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —á–∏—Å–ª–∞ –§—ñ–±–æ–Ω–∞—á—á—ñ
    return b

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
print(fibonacci_iter(6))   # 8
print(fibonacci_iter(10))  # 55
print(fibonacci_iter(50))  # 12586269025 (–º–∏—Ç—Ç—î–≤–æ!)
# üèÜ –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ a —ñ b –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–≤–æ—Ö –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∑–Ω–∞—á–µ–Ω—å.
# –Ü—Ç–µ—Ä—É—î–º–æ –≤—ñ–¥ 2 –¥–æ n, –æ–Ω–æ–≤–ª—é—é—á–∏ a —ñ b –∑–∞ —Ñ–æ—Ä–º—É–ª–æ—é b = a + b.
# –û—Å—Ç–∞–Ω–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è b –º—ñ—Å—Ç–∏—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å.