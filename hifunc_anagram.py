# üîπ 9. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–Ω–∞–≥—Ä–∞–º–∏
# –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –¥–≤–∞ —Å–ª–æ–≤–∞ –∞–Ω–∞–≥—Ä–∞–º–∞–º–∏ (–º–∞—é—Ç—å –æ–¥–Ω–∞–∫–æ–≤—ñ –±—É–∫–≤–∏, –∞–ª–µ –≤ —ñ–Ω—à–æ–º—É –ø–æ—Ä—è–¥–∫—É).
# üìå –ü—Ä–∏–∫–ª–∞–¥:
# print(is_anagram("listen", "silent"))  # True
# print(is_anagram("hello", "world"))    # False

# üîπ –°–ø–æ—Å—ñ–± 1: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è sorted()
# üìå –Ü–¥–µ—è: –Ø–∫—â–æ –≤—ñ–¥—Å–æ—Ä—Ç—É–≤–∞—Ç–∏ –±—É–∫–≤–∏ —É –¥–≤–æ—Ö —Å–ª–æ–≤–∞—Ö, –≤–æ–Ω–∏ –±—É–¥—É—Ç—å –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏ –¥–ª—è –∞–Ω–∞–≥—Ä–∞–º.

def is_anagram(word1, word2):
    return sorted(word1) == sorted(word2)

# üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
print(is_anagram("listen", "silent"))  # True
print(is_anagram("hello", "world"))    # False
print(is_anagram("evil", "vile"))      # True
# ‚úÖ –ü–ª—é—Å–∏: –ü—Ä–æ—Å—Ç–∏–π, –∑—Ä–æ–∑—É–º—ñ–ª–∏–π, —à–≤–∏–¥–∫–æ –ø—Ä–∞—Ü—é—î –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å–ª—ñ–≤.
# ‚ùå –ú—ñ–Ω—É—Å–∏: –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—î —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å O(n log n), —Ç–æ–º—É –ø–æ–≤—ñ–ª—å–Ω–µ –¥–ª—è –¥–æ–≤–≥–∏—Ö —Å–ª—ñ–≤.

# üîπ –°–ø–æ—Å—ñ–± 2: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è Counter (–µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–∏–π —Å–ø–æ—Å—ñ–±)
# üìå –Ü–¥–µ—è: –ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ, —Å–∫—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤ –∫–æ–∂–Ω–∞ –ª—ñ—Ç–µ—Ä–∞ –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è –≤ –æ–±–æ—Ö —Å–ª–æ–≤–∞—Ö.

from collections import Counter

def is_anagram(word1, word2):
    return Counter(word1) == Counter(word2)

# üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
print(is_anagram("listen", "silent"))  # True
print(is_anagram("hello", "world"))    # False
print(is_anagram("evil", "vile"))      # True
# ‚úÖ –ü–ª—é—Å–∏: –ü—Ä–∞—Ü—é—î –∑–∞ O(n), –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–∏–π –∑–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è.
# ‚ùå –ú—ñ–Ω—É—Å–∏: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –±—ñ–ª—å—à–µ –ø–∞–º‚Äô—è—Ç—ñ (—Å—Ç–≤–æ—Ä—é—î –¥–≤–∞ Counter).

# üîπ –î–æ–¥–∞—Ç–∫–æ–≤–æ: –Ü–≥–Ω–æ—Ä—É—î–º–æ —Ä–µ–≥—ñ—Å—Ç—Ä —Ç–∞ –ø—Ä–æ–±—ñ–ª–∏
# üìå –ü—Ä–æ–±–ª–µ–º–∞: "Listen" —ñ "Silent" ‚Äî –∞–Ω–∞–≥—Ä–∞–º–∏, –∞–ª–µ sorted("Listen") != sorted("Silent").
# üìå –†—ñ—à–µ–Ω–Ω—è: –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –Ω–∞ –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä —Ç–∞ –≤–∏–¥–∞–ª—è—î–º–æ –ø—Ä–æ–±—ñ–ª–∏.

def is_anagram(word1, word2):
    word1 = word1.replace(" ", "").lower()
    word2 = word2.replace(" ", "").lower()
    return Counter(word1) == Counter(word2)

# üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞
print(is_anagram("Listen", "Silent"))      # True
print(is_anagram("Astronomer", "Moon starer"))  # True
print(is_anagram("Hello", "world"))        # False
# ‚úÖ –ü–ª—é—Å–∏: –ö–æ—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–æ–±–ª—è—î —Ä–µ–≥—ñ—Å—Ç—Ä —ñ –ø—Ä–æ–±—ñ–ª–∏.